import{_ as n,c as s,o as a,a as t}from"./app.315daad1.js";const m='{"title":"\u5DE5\u5177\u7C7B","description":"","frontmatter":{},"headers":[{"level":2,"title":"isFunction","slug":"isfunction"},{"level":2,"title":"\u83B7\u53D6\u6587\u4EF6\u540E\u7F00","slug":"\u83B7\u53D6\u6587\u4EF6\u540E\u7F00"},{"level":2,"title":"\u4FDD\u7559\u5C0F\u6570\u70B9\u540E\u51E0\u4F4D","slug":"\u4FDD\u7559\u5C0F\u6570\u70B9\u540E\u51E0\u4F4D"},{"level":2,"title":"\u624B\u52A8\u5207\u5272\u6570\u7EC4","slug":"\u624B\u52A8\u5207\u5272\u6570\u7EC4"}],"relativePath":"Utils/index.md","lastUpdated":1640060973095}',p={},o=t(`<h1 id="\u5DE5\u5177\u7C7B" tabindex="-1">\u5DE5\u5177\u7C7B <a class="header-anchor" href="#\u5DE5\u5177\u7C7B" aria-hidden="true">#</a></h1><h2 id="isfunction" tabindex="-1">isFunction <a class="header-anchor" href="#isfunction" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> isFunction <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> <span class="token builtin">Function</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">typeof</span> val <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u83B7\u53D6\u6587\u4EF6\u540E\u7F00" tabindex="-1">\u83B7\u53D6\u6587\u4EF6\u540E\u7F00 <a class="header-anchor" href="#\u83B7\u53D6\u6587\u4EF6\u540E\u7F00" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">getExt</span><span class="token punctuation">(</span><span class="token parameter">filename</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> filename <span class="token operator">==</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6587\u4EF6\u6CA1\u6709\u540E\u7F00\u540D\uFF0C\u8FD4\u56DEnull</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filename<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> filename<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;filename must be a string type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u4FDD\u7559\u5C0F\u6570\u70B9\u540E\u51E0\u4F4D" tabindex="-1">\u4FDD\u7559\u5C0F\u6570\u70B9\u540E\u51E0\u4F4D <a class="header-anchor" href="#\u4FDD\u7559\u5C0F\u6570\u70B9\u540E\u51E0\u4F4D" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">cutNumber</span><span class="token punctuation">(</span><span class="token parameter">number<span class="token punctuation">,</span> no <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> number <span class="token operator">!=</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    number <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">Number</span><span class="token punctuation">(</span>number<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>no<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u624B\u52A8\u5207\u5272\u6570\u7EC4" tabindex="-1">\u624B\u52A8\u5207\u5272\u6570\u7EC4 <a class="header-anchor" href="#\u624B\u52A8\u5207\u5272\u6570\u7EC4" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">chunk</span><span class="token punctuation">(</span><span class="token parameter">array<span class="token punctuation">,</span> process<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> item <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">process</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> process<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">elem<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">chunk</span><span class="token punctuation">(</span>
  arr<span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,10),e=[o];function c(u,l,i,k,r,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{m as __pageData,y as default};
